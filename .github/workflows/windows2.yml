name: Windows

on:
  push:
    branches: [ windows-runner ]

# env:
  
jobs:
  build-windows:
    strategy:
      matrix:
        include:
          # Windows CPU-only build
          - name: "Windows"

    runs-on: windows-2019
    name: ${{ matrix.name }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Prepare vcpkg
      uses: lukka/run-vcpkg@v4
      with:
        vcpkgArguments: pcre2
        vcpkgGitCommitId: 6185aa76504a5025f36754324abf307cc776f3da
        vcpkgDirectory: ${{ github.workspace }}/vcpkg/
        vcpkgTriplet: x64-windows-static

    - name: Build
      uses: lukka/run-cmake@v3
      with:
        buildDirectory: ${{ github.workspace }}/build
        cmakeAppendedArgs: '-G Ninja'
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: ${{ github.workspace }}/CMakeLists.txt
        useVcpkgToolchainFile: true

    # # Windows CUDA builds use USE_NCCL=off due to compilation errors.
    # - name: Build Debug
    #   uses: lukka/run-cmake@v3
    #   with:
    #     buildDirectory: ${{ github.workspace }}/build/Debug
    #     cmakeAppendedArgs: '-G Ninja
    #       -DCMAKE_BUILD_TYPE="Debug"
    #       -DOPENSSL_USE_STATIC_LIBS="TRUE"
    #       -DOPENSSL_MSVC_STATIC_RT="TRUE"
    #       -DCOMPILE_CPU="TRUE"
    #       -DCOMPILE_CUDA="${{ matrix.gpu }}"
    #       -DCOMPILE_SERVER="FALSE"
    #       -DCOMPILE_TESTS="TRUE"
    #       -DUSE_FBGEMM="TRUE"
    #       -DUSE_MPI="FALSE"
    #       -DUSE_NCCL="FALSE"
    #       -DUSE_SENTENCEPIECE="TRUE"
    #       -DUSE_STATIC_LIBS="TRUE"'
    #     cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
    #     cmakeListsTxtPath: ${{ github.workspace }}/CMakeLists.txt
    #     useVcpkgToolchainFile: true
    #   # Building in Debug is sufficient for the all-in CPU+GPU compilation;
    #   # its main purpose is to detect warnings that the Release build is not
    #   # able to find sometimes.
    #   if: matrix.gpu == true

    # # Windows CUDA builds use USE_NCCL=off due to compilation errors
    # - name: Build Release
    #   uses: lukka/run-cmake@v3
    #   with:
    #     buildDirectory: ${{ github.workspace }}/build/
    #     cmakeAppendedArgs: '-G Ninja
    #       -DBOOST_ROOT="${{ env.BOOST_ROOT }}"
    #       -DBOOST_INCLUDEDIR="${{ env.BOOST_ROOT }}/include"
    #       -DBOOST_LIBRARYDIR="${{ env.BOOST_ROOT }}/lib"
    #       -DCMAKE_BUILD_TYPE="Release"
    #       -DOPENSSL_USE_STATIC_LIBS="TRUE"
    #       -DOPENSSL_MSVC_STATIC_RT="TRUE"
    #       -DCOMPILE_CPU="TRUE"
    #       -DCOMPILE_CUDA="${{ matrix.gpu }}"
    #       -DCOMPILE_SERVER="FALSE"
    #       -DCOMPILE_TESTS="TRUE"
    #       -DUSE_FBGEMM="TRUE"
    #       -DUSE_MPI="FALSE"
    #       -DUSE_NCCL="FALSE"
    #       -DUSE_SENTENCEPIECE="TRUE"
    #       -DUSE_STATIC_LIBS="TRUE"'
    #     cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
    #     cmakeListsTxtPath: ${{ github.workspace }}/CMakeLists.txt
    #     useVcpkgToolchainFile: true

    # - name: Run unit tests
    #   working-directory: build/
    #   run: ctest
    #   # Not run in GPU builds because GitHub-hosted VMs do not have GPUs
    #   if: matrix.gpu == false

    # - name: Print versions
    #   working-directory: build/
    #   run: |
    #     .\marian.exe --version
    #     .\marian-decoder.exe --version
    #     .\marian-scorer.exe --version
    #     dir *.exe
    #   shell: cmd
